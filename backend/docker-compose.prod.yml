version: '3.8'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: ebay_optimizer_backend
    restart: unless-stopped
    environment:
      - PROJECT_NAME=eBay Listing Optimizer
      - VERSION=2.0.0
      - API_V1_STR=/api/v1
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=30
      - DATABASE_URL=sqlite:///./data/ebay_optimizer.db
      - BACKEND_CORS_ORIGINS=http://localhost:3000,https://yourdomain.com
      - GOOGLE_SHEETS_CREDENTIALS_PATH=/app/credentials/google-service-account.json
      - MAX_TITLE_LENGTH=80
      - MAX_DESCRIPTION_LENGTH=4000
      - USE_FALLBACK_DATA=false
      - FALLBACK_DATA_PATH=/app/data/sample_listings.json
      - PYTHONPATH=/app
    volumes:
      - ./data:/app/data
      - ./credentials:/app/credentials:ro
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    command: [
      "uvicorn", 
      "app.main:app", 
      "--host", "0.0.0.0", 
      "--port", "8000",
      "--workers", "4",
      "--access-log",
      "--log-level", "info"
    ]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile.prod
    container_name: ebay_optimizer_frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:8000/api/v1
      - REACT_APP_NAME=eBay Listing Optimizer
      - NODE_ENV=production
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  nginx:
    image: nginx:alpine
    container_name: ebay_optimizer_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - backend
      - frontend
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:alpine
    container_name: ebay_optimizer_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

volumes:
  redis_data:
    driver: local

networks:
  default:
    name: ebay_optimizer_network